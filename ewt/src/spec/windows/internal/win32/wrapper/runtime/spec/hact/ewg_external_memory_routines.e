indexing

	description:

		"External Memory routines"

	library: "Eiffel Wrapper Generator Library"
	copyright: "Copyright (c) 1999, Andreas Leitner and others"
	license: "Eiffel Forum License v2 (see forum.txt)"
	date: "$Date: 2003/12/29 16:54:52 $"
	revision: "$Revision: 1.1 $"


class EWG_EXTERNAL_MEMORY_ROUTINES

feature
feature

-- malloc
	





















	malloc_external (a_size: INTEGER): POINTER is
		require
			a_size_greater_equal_zero: a_size >= 0
		external
			"C [macro <stdlib.h>]"
		alias
			"malloc"
		end


-- free






















	free_external (a_item: POINTER) is
		require
			a_item_not_void: a_item /= Void
		external
			"C [macro <stdlib.h>]"
		alias
			"free"
		end


-- memcpy


























	memcpy_external (a_dest, a_src: POINTER; a_n: INTEGER): POINTER is
		require
			a_n_greater_equal_zero: a_n >= 0
			a_dest_not_default: a_dest /= Default_pointer
			a_src_not_default: a_src /= Default_pointer
		external
			"C [macro <string.h>]"
		alias
			"memcpy"
		end



-- read_integer_8















































-- put_integer_8

	

















































-- read_integer_16
















































-- put_integer_16



















































-- read_integer_32







































-- put_integer_32
















































-- read_integer







































-- put_integer














































-- read_pointer




























-- put_pointer
































-- add_pointer_and_integer



















-- pointer_to_integer
-- TODO: what if sizeof(int) != sizeof(void*) ?

















-- integer_to_pointer
-- TODO: what if sizeof(int) != sizeof(void*) ?

















-- reference_of


















-- sizeof_pointer	


















-- sizeof_int


















-- bitwise or
-- TODO: put in other class


















end
	
