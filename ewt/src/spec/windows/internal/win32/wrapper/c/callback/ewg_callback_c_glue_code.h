// This file has been generated by EWG. Do not edit. Changes will be lost!
// callback glue code header
#ifndef EWG_CALLBACK_C_GLUE_CODE__
#define EWG_CALLBACK_C_GLUE_CODE__

#include <my_winbase.h>

typedef void (*pimage_tls_callback_eiffel_feature) (void* a_class, PVOID DllHandle, DWORD Reason, PVOID Reserved);

struct pimage_tls_callback_entry_struct
{
	void* a_class;
	pimage_tls_callback_eiffel_feature feature;
};

void set_pimage_tls_callback_entry (void* a_class, void* a_feature);

void* get_pimage_tls_callback_stub ();
void call_pimage_tls_callback (void* a_function, PVOID DllHandle, DWORD Reason, PVOID Reserved);

typedef void (*pvoid_dword_pvoid_anonymous_callback_eiffel_feature) (void* a_class, PVOID DllHandle, DWORD Reason, PVOID Reserved);

struct pvoid_dword_pvoid_anonymous_callback_entry_struct
{
	void* a_class;
	pvoid_dword_pvoid_anonymous_callback_eiffel_feature feature;
};

void set_pvoid_dword_pvoid_anonymous_callback_entry (void* a_class, void* a_feature);

void* get_pvoid_dword_pvoid_anonymous_callback_stub ();
void call_pvoid_dword_pvoid_anonymous_callback (void* a_function, PVOID DllHandle, DWORD Reason, PVOID Reserved);

typedef void (*waitortimercallbackfunc_eiffel_feature) (void* a_class, PVOID anonymous_1, BOOLEAN anonymous_2);

struct waitortimercallbackfunc_entry_struct
{
	void* a_class;
	waitortimercallbackfunc_eiffel_feature feature;
};

void set_waitortimercallbackfunc_entry (void* a_class, void* a_feature);

void* get_waitortimercallbackfunc_stub ();
void call_waitortimercallbackfunc (void* a_function, PVOID anonymous_1, BOOLEAN anonymous_2);

typedef void (*workercallbackfunc_eiffel_feature) (void* a_class, PVOID anonymous_1);

struct workercallbackfunc_entry_struct
{
	void* a_class;
	workercallbackfunc_eiffel_feature feature;
};

void set_workercallbackfunc_entry (void* a_class, void* a_feature);

void* get_workercallbackfunc_stub ();
void call_workercallbackfunc (void* a_function, PVOID anonymous_1);

typedef int (*farproc_eiffel_feature) (void* a_class);

struct farproc_entry_struct
{
	void* a_class;
	farproc_eiffel_feature feature;
};

void set_farproc_entry (void* a_class, void* a_feature);

void* get_farproc_stub ();
int call_farproc (void* a_function);

typedef DWORD (*pthread_start_routine_eiffel_feature) (void* a_class, LPVOID lpThreadParameter);

struct pthread_start_routine_entry_struct
{
	void* a_class;
	pthread_start_routine_eiffel_feature feature;
};

void set_pthread_start_routine_entry (void* a_class, void* a_feature);

void* get_pthread_start_routine_stub ();
DWORD call_pthread_start_routine (void* a_function, LPVOID lpThreadParameter);

typedef LONG (*ptop_level_exception_filter_eiffel_feature) (void* a_class, PEXCEPTION_POINTERS ExceptionInfo);

struct ptop_level_exception_filter_entry_struct
{
	void* a_class;
	ptop_level_exception_filter_eiffel_feature feature;
};

void set_ptop_level_exception_filter_entry (void* a_class, void* a_feature);

void* get_ptop_level_exception_filter_stub ();
LONG call_ptop_level_exception_filter (void* a_function, PEXCEPTION_POINTERS ExceptionInfo);

typedef DWORD (*pfe_export_func_eiffel_feature) (void* a_class, PBYTE pbData, PVOID pvCallbackContext, ULONG ulLength);

struct pfe_export_func_entry_struct
{
	void* a_class;
	pfe_export_func_eiffel_feature feature;
};

void set_pfe_export_func_entry (void* a_class, void* a_feature);

void* get_pfe_export_func_stub ();
DWORD call_pfe_export_func (void* a_function, PBYTE pbData, PVOID pvCallbackContext, ULONG ulLength);

typedef DWORD (*pfe_import_func_eiffel_feature) (void* a_class, PBYTE pbData, PVOID pvCallbackContext, PULONG ulLength);

struct pfe_import_func_entry_struct
{
	void* a_class;
	pfe_import_func_eiffel_feature feature;
};

void set_pfe_import_func_entry (void* a_class, void* a_feature);

void* get_pfe_import_func_stub ();
DWORD call_pfe_import_func (void* a_function, PBYTE pbData, PVOID pvCallbackContext, PULONG ulLength);

typedef void (*lpoverlapped_completion_routine_eiffel_feature) (void* a_class, DWORD dwErrorCode, DWORD dwNumberOfBytesTransfered, LPOVERLAPPED lpOverlapped);

struct lpoverlapped_completion_routine_entry_struct
{
	void* a_class;
	lpoverlapped_completion_routine_eiffel_feature feature;
};

void set_lpoverlapped_completion_routine_entry (void* a_class, void* a_feature);

void* get_lpoverlapped_completion_routine_stub ();
void call_lpoverlapped_completion_routine (void* a_function, DWORD dwErrorCode, DWORD dwNumberOfBytesTransfered, LPOVERLAPPED lpOverlapped);

typedef BOOL (*enumrestypeproc_eiffel_feature) (void* a_class, HMODULE hModule, LPTSTR lpType, LONG lParam);

struct enumrestypeproc_entry_struct
{
	void* a_class;
	enumrestypeproc_eiffel_feature feature;
};

void set_enumrestypeproc_entry (void* a_class, void* a_feature);

void* get_enumrestypeproc_stub ();
BOOL call_enumrestypeproc (void* a_function, HMODULE hModule, LPTSTR lpType, LONG lParam);

typedef BOOL (*enumresnameproc_eiffel_feature) (void* a_class, HMODULE hModule, LPCTSTR lpType, LPTSTR lpName, LONG lParam);

struct enumresnameproc_entry_struct
{
	void* a_class;
	enumresnameproc_eiffel_feature feature;
};

void set_enumresnameproc_entry (void* a_class, void* a_feature);

void* get_enumresnameproc_stub ();
BOOL call_enumresnameproc (void* a_function, HMODULE hModule, LPCTSTR lpType, LPTSTR lpName, LONG lParam);

typedef BOOL (*enumreslangproc_eiffel_feature) (void* a_class, HMODULE hModule, LPCTSTR lpType, LPCTSTR lpName, WORD wLanguage, LONG lParam);

struct enumreslangproc_entry_struct
{
	void* a_class;
	enumreslangproc_eiffel_feature feature;
};

void set_enumreslangproc_entry (void* a_class, void* a_feature);

void* get_enumreslangproc_stub ();
BOOL call_enumreslangproc (void* a_function, HMODULE hModule, LPCTSTR lpType, LPCTSTR lpName, WORD wLanguage, LONG lParam);

typedef int (*oldfontenumproca_eiffel_feature) (void* a_class, LOGFONTA const * anonymous_1, TEXTMETRICA const * anonymous_2, DWORD anonymous_3, LPARAM anonymous_4);

struct oldfontenumproca_entry_struct
{
	void* a_class;
	oldfontenumproca_eiffel_feature feature;
};

void set_oldfontenumproca_entry (void* a_class, void* a_feature);

void* get_oldfontenumproca_stub ();
int call_oldfontenumproca (void* a_function, LOGFONTA const * anonymous_1, TEXTMETRICA const * anonymous_2, DWORD anonymous_3, LPARAM anonymous_4);

typedef int (*oldfontenumprocw_eiffel_feature) (void* a_class, LOGFONTW const * anonymous_1, TEXTMETRICW const * anonymous_2, DWORD anonymous_3, LPARAM anonymous_4);

struct oldfontenumprocw_entry_struct
{
	void* a_class;
	oldfontenumprocw_eiffel_feature feature;
};

void set_oldfontenumprocw_entry (void* a_class, void* a_feature);

void* get_oldfontenumprocw_stub ();
int call_oldfontenumprocw (void* a_function, LOGFONTW const * anonymous_1, TEXTMETRICW const * anonymous_2, DWORD anonymous_3, LPARAM anonymous_4);

typedef int (*gobjenumproc_eiffel_feature) (void* a_class, LPVOID anonymous_1, LPARAM anonymous_2);

struct gobjenumproc_entry_struct
{
	void* a_class;
	gobjenumproc_eiffel_feature feature;
};

void set_gobjenumproc_entry (void* a_class, void* a_feature);

void* get_gobjenumproc_stub ();
int call_gobjenumproc (void* a_function, LPVOID anonymous_1, LPARAM anonymous_2);

typedef void (*lineddaproc_eiffel_feature) (void* a_class, int anonymous_1, int anonymous_2, LPARAM anonymous_3);

struct lineddaproc_entry_struct
{
	void* a_class;
	lineddaproc_eiffel_feature feature;
};

void set_lineddaproc_entry (void* a_class, void* a_feature);

void* get_lineddaproc_stub ();
void call_lineddaproc (void* a_function, int anonymous_1, int anonymous_2, LPARAM anonymous_3);

typedef UINT (*lpfndevmode_eiffel_feature) (void* a_class, HWND anonymous_1, HMODULE anonymous_2, LPDEVMODE anonymous_3, LPSTR anonymous_4, LPSTR anonymous_5, LPDEVMODE anonymous_6, LPSTR anonymous_7, UINT anonymous_8);

struct lpfndevmode_entry_struct
{
	void* a_class;
	lpfndevmode_eiffel_feature feature;
};

void set_lpfndevmode_entry (void* a_class, void* a_feature);

void* get_lpfndevmode_stub ();
UINT call_lpfndevmode (void* a_function, HWND anonymous_1, HMODULE anonymous_2, LPDEVMODE anonymous_3, LPSTR anonymous_4, LPSTR anonymous_5, LPDEVMODE anonymous_6, LPSTR anonymous_7, UINT anonymous_8);

typedef DWORD (*lpfndevcaps_eiffel_feature) (void* a_class, LPSTR anonymous_1, LPSTR anonymous_2, UINT anonymous_3, LPSTR anonymous_4, LPDEVMODE anonymous_5);

struct lpfndevcaps_entry_struct
{
	void* a_class;
	lpfndevcaps_eiffel_feature feature;
};

void set_lpfndevcaps_entry (void* a_class, void* a_feature);

void* get_lpfndevcaps_stub ();
DWORD call_lpfndevcaps (void* a_function, LPSTR anonymous_1, LPSTR anonymous_2, UINT anonymous_3, LPSTR anonymous_4, LPDEVMODE anonymous_5);

typedef int (*mfenumproc_eiffel_feature) (void* a_class, HDC anonymous_1, HANDLETABLE * anonymous_2, METARECORD * anonymous_3, int anonymous_4, LPARAM anonymous_5);

struct mfenumproc_entry_struct
{
	void* a_class;
	mfenumproc_eiffel_feature feature;
};

void set_mfenumproc_entry (void* a_class, void* a_feature);

void* get_mfenumproc_stub ();
int call_mfenumproc (void* a_function, HDC anonymous_1, HANDLETABLE * anonymous_2, METARECORD * anonymous_3, int anonymous_4, LPARAM anonymous_5);

typedef int (*enhmfenumproc_eiffel_feature) (void* a_class, HDC anonymous_1, HANDLETABLE * anonymous_2, ENHMETARECORD const * anonymous_3, int anonymous_4, LPARAM anonymous_5);

struct enhmfenumproc_entry_struct
{
	void* a_class;
	enhmfenumproc_eiffel_feature feature;
};

void set_enhmfenumproc_entry (void* a_class, void* a_feature);

void* get_enhmfenumproc_stub ();
int call_enhmfenumproc (void* a_function, HDC anonymous_1, HANDLETABLE * anonymous_2, ENHMETARECORD const * anonymous_3, int anonymous_4, LPARAM anonymous_5);

typedef BOOL (*abortproc_eiffel_feature) (void* a_class, HDC anonymous_1, int anonymous_2);

struct abortproc_entry_struct
{
	void* a_class;
	abortproc_eiffel_feature feature;
};

void set_abortproc_entry (void* a_class, void* a_feature);

void* get_abortproc_stub ();
BOOL call_abortproc (void* a_function, HDC anonymous_1, int anonymous_2);

typedef int (*icmenumproca_eiffel_feature) (void* a_class, LPSTR anonymous_1, LPARAM anonymous_2);

struct icmenumproca_entry_struct
{
	void* a_class;
	icmenumproca_eiffel_feature feature;
};

void set_icmenumproca_entry (void* a_class, void* a_feature);

void* get_icmenumproca_stub ();
int call_icmenumproca (void* a_function, LPSTR anonymous_1, LPARAM anonymous_2);

typedef int (*icmenumprocw_eiffel_feature) (void* a_class, LPWSTR anonymous_1, LPARAM anonymous_2);

struct icmenumprocw_entry_struct
{
	void* a_class;
	icmenumprocw_eiffel_feature feature;
};

void set_icmenumprocw_entry (void* a_class, void* a_feature);

void* get_icmenumprocw_stub ();
int call_icmenumprocw (void* a_function, LPWSTR anonymous_1, LPARAM anonymous_2);

typedef LRESULT (*wndproc_eiffel_feature) (void* a_class, HWND anonymous_1, UINT anonymous_2, WPARAM anonymous_3, LPARAM anonymous_4);

struct wndproc_entry_struct
{
	void* a_class;
	wndproc_eiffel_feature feature;
};

void set_wndproc_entry (void* a_class, void* a_feature);

void* get_wndproc_stub ();
LRESULT call_wndproc (void* a_function, HWND anonymous_1, UINT anonymous_2, WPARAM anonymous_3, LPARAM anonymous_4);

typedef BOOL (*dlgproc_eiffel_feature) (void* a_class, HWND anonymous_1, UINT anonymous_2, WPARAM anonymous_3, LPARAM anonymous_4);

struct dlgproc_entry_struct
{
	void* a_class;
	dlgproc_eiffel_feature feature;
};

void set_dlgproc_entry (void* a_class, void* a_feature);

void* get_dlgproc_stub ();
BOOL call_dlgproc (void* a_function, HWND anonymous_1, UINT anonymous_2, WPARAM anonymous_3, LPARAM anonymous_4);

typedef void (*timerproc_eiffel_feature) (void* a_class, HWND anonymous_1, UINT anonymous_2, UINT anonymous_3, DWORD anonymous_4);

struct timerproc_entry_struct
{
	void* a_class;
	timerproc_eiffel_feature feature;
};

void set_timerproc_entry (void* a_class, void* a_feature);

void* get_timerproc_stub ();
void call_timerproc (void* a_function, HWND anonymous_1, UINT anonymous_2, UINT anonymous_3, DWORD anonymous_4);

typedef BOOL (*graystringproc_eiffel_feature) (void* a_class, HDC anonymous_1, LPARAM anonymous_2, int anonymous_3);

struct graystringproc_entry_struct
{
	void* a_class;
	graystringproc_eiffel_feature feature;
};

void set_graystringproc_entry (void* a_class, void* a_feature);

void* get_graystringproc_stub ();
BOOL call_graystringproc (void* a_function, HDC anonymous_1, LPARAM anonymous_2, int anonymous_3);

typedef BOOL (*wndenumproc_eiffel_feature) (void* a_class, HWND anonymous_1, LPARAM anonymous_2);

struct wndenumproc_entry_struct
{
	void* a_class;
	wndenumproc_eiffel_feature feature;
};

void set_wndenumproc_entry (void* a_class, void* a_feature);

void* get_wndenumproc_stub ();
BOOL call_wndenumproc (void* a_function, HWND anonymous_1, LPARAM anonymous_2);

typedef LRESULT (*hookproc_eiffel_feature) (void* a_class, int code, WPARAM wParam, LPARAM lParam);

struct hookproc_entry_struct
{
	void* a_class;
	hookproc_eiffel_feature feature;
};

void set_hookproc_entry (void* a_class, void* a_feature);

void* get_hookproc_stub ();
LRESULT call_hookproc (void* a_function, int code, WPARAM wParam, LPARAM lParam);

typedef void (*sendasyncproc_eiffel_feature) (void* a_class, HWND anonymous_1, UINT anonymous_2, DWORD anonymous_3, LRESULT anonymous_4);

struct sendasyncproc_entry_struct
{
	void* a_class;
	sendasyncproc_eiffel_feature feature;
};

void set_sendasyncproc_entry (void* a_class, void* a_feature);

void* get_sendasyncproc_stub ();
void call_sendasyncproc (void* a_function, HWND anonymous_1, UINT anonymous_2, DWORD anonymous_3, LRESULT anonymous_4);

typedef BOOL (*propenumproca_eiffel_feature) (void* a_class, HWND anonymous_1, LPCSTR anonymous_2, HANDLE anonymous_3);

struct propenumproca_entry_struct
{
	void* a_class;
	propenumproca_eiffel_feature feature;
};

void set_propenumproca_entry (void* a_class, void* a_feature);

void* get_propenumproca_stub ();
BOOL call_propenumproca (void* a_function, HWND anonymous_1, LPCSTR anonymous_2, HANDLE anonymous_3);

typedef BOOL (*propenumprocw_eiffel_feature) (void* a_class, HWND anonymous_1, LPCWSTR anonymous_2, HANDLE anonymous_3);

struct propenumprocw_entry_struct
{
	void* a_class;
	propenumprocw_eiffel_feature feature;
};

void set_propenumprocw_entry (void* a_class, void* a_feature);

void* get_propenumprocw_stub ();
BOOL call_propenumprocw (void* a_function, HWND anonymous_1, LPCWSTR anonymous_2, HANDLE anonymous_3);

typedef BOOL (*propenumprocexa_eiffel_feature) (void* a_class, HWND anonymous_1, LPSTR anonymous_2, HANDLE anonymous_3, DWORD anonymous_4);

struct propenumprocexa_entry_struct
{
	void* a_class;
	propenumprocexa_eiffel_feature feature;
};

void set_propenumprocexa_entry (void* a_class, void* a_feature);

void* get_propenumprocexa_stub ();
BOOL call_propenumprocexa (void* a_function, HWND anonymous_1, LPSTR anonymous_2, HANDLE anonymous_3, DWORD anonymous_4);

typedef BOOL (*propenumprocexw_eiffel_feature) (void* a_class, HWND anonymous_1, LPWSTR anonymous_2, HANDLE anonymous_3, DWORD anonymous_4);

struct propenumprocexw_entry_struct
{
	void* a_class;
	propenumprocexw_eiffel_feature feature;
};

void set_propenumprocexw_entry (void* a_class, void* a_feature);

void* get_propenumprocexw_stub ();
BOOL call_propenumprocexw (void* a_function, HWND anonymous_1, LPWSTR anonymous_2, HANDLE anonymous_3, DWORD anonymous_4);

typedef int (*editwordbreakproca_eiffel_feature) (void* a_class, LPSTR lpch, int ichCurrent, int cch, int code);

struct editwordbreakproca_entry_struct
{
	void* a_class;
	editwordbreakproca_eiffel_feature feature;
};

void set_editwordbreakproca_entry (void* a_class, void* a_feature);

void* get_editwordbreakproca_stub ();
int call_editwordbreakproca (void* a_function, LPSTR lpch, int ichCurrent, int cch, int code);

typedef int (*editwordbreakprocw_eiffel_feature) (void* a_class, LPWSTR lpch, int ichCurrent, int cch, int code);

struct editwordbreakprocw_entry_struct
{
	void* a_class;
	editwordbreakprocw_eiffel_feature feature;
};

void set_editwordbreakprocw_entry (void* a_class, void* a_feature);

void* get_editwordbreakprocw_stub ();
int call_editwordbreakprocw (void* a_function, LPWSTR lpch, int ichCurrent, int cch, int code);

typedef BOOL (*drawstateproc_eiffel_feature) (void* a_class, HDC hdc, LPARAM lData, WPARAM wData, int cx, int cy);

struct drawstateproc_entry_struct
{
	void* a_class;
	drawstateproc_eiffel_feature feature;
};

void set_drawstateproc_entry (void* a_class, void* a_feature);

void* get_drawstateproc_stub ();
BOOL call_drawstateproc (void* a_function, HDC hdc, LPARAM lData, WPARAM wData, int cx, int cy);

typedef BOOL (*nameenumproca_eiffel_feature) (void* a_class, LPSTR anonymous_1, LPARAM anonymous_2);

struct nameenumproca_entry_struct
{
	void* a_class;
	nameenumproca_eiffel_feature feature;
};

void set_nameenumproca_entry (void* a_class, void* a_feature);

void* get_nameenumproca_stub ();
BOOL call_nameenumproca (void* a_function, LPSTR anonymous_1, LPARAM anonymous_2);

typedef BOOL (*nameenumprocw_eiffel_feature) (void* a_class, LPWSTR anonymous_1, LPARAM anonymous_2);

struct nameenumprocw_entry_struct
{
	void* a_class;
	nameenumprocw_eiffel_feature feature;
};

void set_nameenumprocw_entry (void* a_class, void* a_feature);

void* get_nameenumprocw_stub ();
BOOL call_nameenumprocw (void* a_function, LPWSTR anonymous_1, LPARAM anonymous_2);

typedef void (*msgboxcallback_eiffel_feature) (void* a_class, LPHELPINFO lpHelpInfo);

struct msgboxcallback_entry_struct
{
	void* a_class;
	msgboxcallback_eiffel_feature feature;
};

void set_msgboxcallback_entry (void* a_class, void* a_feature);

void* get_msgboxcallback_stub ();
void call_msgboxcallback (void* a_function, LPHELPINFO lpHelpInfo);

#endif
